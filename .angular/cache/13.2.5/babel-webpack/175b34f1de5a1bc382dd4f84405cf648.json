{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\projects\\\\udemy\\\\angular13\\\\pipes\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:\\\\projects\\\\udemy\\\\angular13\\\\pipes\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projects\\\\udemy\\\\angular13\\\\pipes\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var FilterPipe = /*#__PURE__*/(function () {\n  var FilterPipe = /*#__PURE__*/function () {\n    function FilterPipe() {\n      _classCallCheck(this, FilterPipe);\n    }\n\n    _createClass(FilterPipe, [{\n      key: \"transform\",\n      value: function transform(value, filterString) {\n        if (value.length === 0) {\n          return value;\n        }\n\n        var _iterator = _createForOfIteratorHelper(value),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var resultArray = [];\n\n            if (item.status === filterString) {\n              resultArray.push(item);\n            }\n\n            return resultArray;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }]);\n\n    return FilterPipe;\n  }();\n\n  FilterPipe.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n\n  FilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n  return FilterPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}